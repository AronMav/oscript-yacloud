#Использовать logos
#Использовать 1commands

Перем Лог;
Перем ЭтоWindows;
Перем ИсполнительКоманд;

// Выполняет команды 
//
// Параметры:
//   СтрокаКоманды - Строка - Команда исполняемая хостом
//
// Возвращаемое значение:
//   Строка - Вывод выполнения команды
//
Функция ВыполнитьКоманду(СтрокаКоманды) Экспорт
	КомандныйФайл = ПолучитьКомандныйФайлПодключения();
	
	Если ЭтоWindows Тогда
		КомандныйФайл.ДобавитьКоманду("@echo off");
	Иначе
		КомандныйФайл.ДобавитьКоманду("#!/bin/sh");
		КомандныйФайл.УстановитьПриложение("sh");
	КонецЕсли;
	КомандныйФайл.ДобавитьКоманду(СтрокаКоманды);

	Лог.Отладка("Строка команды: " + СтрокаКоманды);
	
	КомандныйФайл.ПоказыватьВыводНемедленно(Ложь);
	КодВозврата = КомандныйФайл.Исполнить();
	
	ВыводКоманды = КомандныйФайл.ПолучитьВывод();

	Если КодВозврата <> 0 Тогда
		Лог.Ошибка(ВыводКоманды);
		ВызватьОшибкуПроверки(ОписаниеОшибки());
	КонецЕсли;
	Лог.Отладка("Вывод команды: " + ВыводКоманды);
	Возврат ВыводКоманды;
КонецФункции

// Получает командный файл
//
//  Возвращаемое значение:
//   КомандныйФайл - класс-КомандныйФайл
//
Функция ПолучитьКомандныйФайлПодключения()

	КомандныйФайл = Новый КомандныйФайл;
	
	КомандныйФайл.Создать();
	КомандныйФайл.УстановитьКодировкуВывода("utf-8");
	
	Возврат КомандныйФайл;
	
КонецФункции

// Вызов исключения с описанием ошибки
//
Процедура ВызватьОшибкуПроверки(Знач ТекстИсключения) Экспорт

	Попытка
		ВызватьИсключение ТекстИсключения;
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		СтекВызовов = ИнформацияОбОшибке.ПолучитьСтекВызовов();
		МассивТекстИсключения = Новый Массив;
		МассивТекстИсключения.Добавить(ТекстИсключения);
		МассивТекстИсключения.Добавить("Стек:");

		Отступ = "";
		СимволОтступа = "  ";
		ПервыйКадр = Истина;
		Для Каждого КадрСтекаВызовов Из СтекВызовов Цикл
			// пропустим первый кадр стека, т.к. он ведет на служебный вызов исключения
			Если ПервыйКадр Тогда
				ПервыйКадр = Ложь;
				Продолжить;
			КонецЕсли;

			Отступ = Отступ + СимволОтступа;
						
			СтрокаСтекТрейса = СтрШаблон(
				"%1%2 / Метод %3 / Строка %4", 
				Отступ,
				КадрСтекаВызовов.ИмяМодуля,
				КадрСтекаВызовов.Метод,
				Формат(КадрСтекаВызовов.НомерСтроки, "ЧГ=") 
			);
			МассивТекстИсключения.Добавить(СтрокаСтекТрейса);
		КонецЦикла;
		ТекстИсключения = СтрСоединить(МассивТекстИсключения, Символы.ПС);

		ВызватьИсключение ТекстИсключения;
	КонецПопытки;
КонецПроцедуры

// Получение лога
//
Функция ПолучитьЛог() Экспорт
	Возврат Лог;
КонецФункции

// Получить исполнителя команд
//
//  Возвращаемое значение:
//   ИсполнительКоманд, ФейковыйИсполнительКоманд - класс-исполнитель
//
Функция ИсполнительКоманд() Экспорт
	Возврат ИсполнительКоманд;
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.vporter");
СистемнаяИнформация = Новый СистемнаяИнформация;
ЭтоWindows = Найти(НРег(СистемнаяИнформация.ВерсияОС), "windows") > 0;