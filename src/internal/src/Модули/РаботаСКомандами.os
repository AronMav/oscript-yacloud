#Использовать xml-parser

// Формирует текст команды для создания ВМ
//
// Параметры:
//	 ЭлементыXML - Соответствие - Прочитанный command.xml
//
// Возвращаемое значение:
//   Структура - Структура параметров которые необходимо заполнить
//
Функция ПолучитьСтруктуруПараметров(ЭлементыXML = Неопределено) Экспорт
	
	Если ЭлементыXML = Неопределено Тогда
		ПутьКФайлу = "./yacloud/src/command.xml";
		ПроцессорXML = Новый СериализацияДанныхXML();
		РезультатЧтения = ПроцессорXML.ПрочитатьИзФайла(ПутьКФайлу);
		ЭлементыXML = РезультатЧтения["YC"]["Параметры"];
	КонецЕсли;
	
	Структура = Новый Структура;
	Для Каждого Элемент Из ЭлементыXML Цикл
		Если Элемент.Значение.Свойство("_Элементы") Тогда
			Структура.Вставить(Элемент.Ключ, ПолучитьСтруктуруПараметров(Элемент.Значение._Элементы));
		Иначе
			Структура.Вставить(Элемент.Ключ);
		КонецЕсли;
	КонецЦикла;
	Возврат Структура;
КонецФункции

// Формирует текст команды для создания ВМ
//
// Параметры:
//	 ПараметрыМашины - Структура - Можно получить использовав конструкцию ВиртуальнаяМашинаYC.ПолучитьСтруктуруПараметров()
//
// Возвращаемое значение:
//   Строка - Команда для создания ВМ
//
Функция СформироватьКомандуСозданияВМ(ИмяВиртуальнойМашины, ПараметрыВМ) Экспорт

	ПутьКФайлу = "./yacloud/src/command.xml";
	ПроцессорXML = Новый СериализацияДанныхXML();
	РезультатЧтения = ПроцессорXML.ПрочитатьИзФайла(ПутьКФайлу);
	
	Команда = СтрШаблон("yc compute instance create --no-user-output --format json --name %1", ИмяВиртуальнойМашины);
	
	Если ТипЗнч(ПараметрыВМ) = Тип("Структура") Тогда
		Команда = Команда + ПараметрыИзСтруктурыВКоманду(ПараметрыВМ, РезультатЧтения["YC"]["Параметры"], РезультатЧтения["YC"]["Зависимости"]);
	Иначе
		Команда = Команда + ПараметрыИзФайлаВКоманду(ПараметрыВМ, РезультатЧтения["YC"]["Параметры"], РезультатЧтения["YC"]["Зависимости"]);
	КонецЕсли;
	
	Возврат СокрЛП(Команда);
КонецФункции

// Формирует текст команды для создания ВМ из Структуры
//
// Параметры:
//	 ПараметрыВМ - Структура - Заполненные параметры ВМ
//	 ЭлементыXML - Соответствие - Прочитанный command.xml область Параметры
//	 Зависимости - Соответствие - Прочитанный command.xml область Зависимости
//	 Разделитель - Строка - Строковое представление разделителя
//
// Возвращаемое значение:
//   Строка - Параметры исполняемой команды
//
Функция ПараметрыИзСтруктурыВКоманду(ПараметрыВМ, ЭлементыXML, Зависимости, Разделитель = " ")
	
	СтрокаКоманда = "";
	Для каждого Параметр Из ПараметрыВМ Цикл
		
		//Обрабатываем булево
		Если Параметр.Значение = "Истина" Тогда
			Параметр.Значение = Булево(1);
		ИначеЕсли Параметр.Значение = "Ложь" Тогда
			Параметр.Значение = Булево(0);
		КонецЕсли;
		
		//Исключаем пустые
		Если Не ЗначениеЗаполнено(Параметр.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		//Исключаем зависимости
		Если Зависимости[Параметр.Ключ] <> Неопределено Тогда
			Если ЗначениеЗаполнено(ПараметрыВМ[Параметр.Ключ]) 
				И Не Параметр.Значение = "Ложь"
				И ЗначениеЗаполнено(ПараметрыВМ[Зависимости[Параметр.Ключ]])
				И Не ПараметрыВМ[Зависимости[Параметр.Ключ]] = "Ложь" Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Атрибуты = ЭлементыXML[Параметр.Ключ]["_Атрибуты"];
		
		
		Если Атрибуты["type"] = Неопределено Тогда
			//Перебор заголовков
			Если ТипЗнч(Параметр.Значение) = Тип("Структура") Тогда
				ДопПараметры = ПараметрыИзСтруктурыВКоманду(Параметр.Значение
						, ЭлементыXML[Параметр.Ключ]["_Элементы"]
						, Зависимости, ",");
				СтрокаКоманда = СтрокаКоманда + Разделитель + Атрибуты["yc"] + Разделитель + ДопПараметры;
			КонецЕсли;
		Иначе
			//Перебор параметров заголовков
			Если Тип(Атрибуты["type"]) <> ТипЗнч(Параметр.Значение) Тогда
				ВызватьИсключение("Не верный тип параметра: " + Параметр.Ключ);
			КонецЕсли;
			
			Если Тип(Атрибуты["type"]) = Тип("Булево") Тогда
				Если Параметр.Значение = Истина Тогда
					СтрокаКоманда = СтрокаКоманда + Разделитель + Атрибуты["yc"];
				Иначе
					Продолжить;
				КонецЕсли;
			Иначе
				
				СтрокаКоманда = ?(ЗначениеЗаполнено(СтрокаКоманда)
						, СтрокаКоманда + Разделитель + Атрибуты["yc"]
						, СтрокаКоманда + Атрибуты["yc"]);
				СтрокаКоманда = ?(СтрНайти(Атрибуты["yc"], "--")
						, СтрокаКоманда + " " + Параметр.Значение
						, СтрокаКоманда + Параметр.Значение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокаКоманда;
КонецФункции

// Формирует текст команды для создания ВМ из Файла
//
// Параметры:
//	 ПараметрыВМ - Строка - Путь к файлу с параметрами ВМ
//	 ЭлементыXML - Соответствие - Прочитанный command.xml область Параметры
//	 Зависимости - Соответствие - Прочитанный command.xml область Зависимости
//	 Разделитель - Строка - Строковое представление разделителя
//
// Возвращаемое значение:
//   Строка - Параметры исполняемой команды
//
Функция ПараметрыИзФайлаВКоманду(Знач ПараметрыВМ, ЭлементыXML, Зависимости, Разделитель = " ")
	
	Если ТипЗнч(ПараметрыВМ) = Тип("Строка") Тогда
		ПроцессорXML = Новый СериализацияДанныхXML();
		ПараметрыВМ = ПроцессорXML.ПрочитатьИзФайла(ПараметрыВМ)["Параметры"];
	КонецЕсли;
	
	СтрокаКоманда = "";
	Для каждого Параметр Из ПараметрыВМ Цикл
		
		//Исключаем пустые
		Если Не ЗначениеЗаполнено(Параметр.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		//Исключаем зависимости
		Если Зависимости[Параметр.Ключ] <> Неопределено Тогда
			Если ЗначениеЗаполнено(ПараметрыВМ[Параметр.Ключ]) 
				И Не Параметр.Значение = "Ложь"
				И ЗначениеЗаполнено(ПараметрыВМ[Зависимости[Параметр.Ключ]])
				И Не ПараметрыВМ[Зависимости[Параметр.Ключ]] = "Ложь" Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Атрибуты = ЭлементыXML[Параметр.Ключ]["_Атрибуты"];
		
		Если Атрибуты["type"] = Неопределено Тогда
			//Перебор заголовков
			Если ТипЗнч(Параметр.Значение) = Тип("Соответствие") Тогда
				ДопПараметры = ПараметрыИзФайлаВКоманду(Параметр.Значение
						, ЭлементыXML[Параметр.Ключ]["_Элементы"]
						, Зависимости, ",");
				СтрокаКоманда = СтрокаКоманда + Разделитель + Атрибуты["yc"] + Разделитель + ДопПараметры;
			КонецЕсли;
		Иначе
			//Перебор параметров заголовков
			Если Атрибуты["type"] = "Число" Тогда
				Попытка
					ЗначениеЧисло = Число(Параметр.Значение);
				Исключение
					ВызватьИсключение("Не верный тип параметра: " + Параметр.Ключ);
				КонецПопытки;
			КонецЕсли;
			
			Если Атрибуты["type"] = "Булево" Тогда
				Если Параметр.Значение = "Истина" Тогда
					СтрокаКоманда = СтрокаКоманда + Разделитель + Атрибуты["yc"];
				Иначе
					Продолжить;
				КонецЕсли;
			Иначе
				
				СтрокаКоманда = ?(ЗначениеЗаполнено(СтрокаКоманда)
						, СтрокаКоманда + Разделитель + Атрибуты["yc"]
						, СтрокаКоманда + Атрибуты["yc"]);
				СтрокаКоманда = ?(СтрНайти(Атрибуты["yc"], "--")
						, СтрокаКоманда + " " + Параметр.Значение
						, СтрокаКоманда + Параметр.Значение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокаКоманда;
КонецФункции